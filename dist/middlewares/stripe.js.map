{"version":3,"sources":["../../src/middlewares/stripe.ts"],"sourcesContent":["import config from '@config';\nimport type { RequestWithWebhook, handler } from '@interfaces/request';\nimport { logger } from '@utils/logger';\nimport type { NextFunction, Response } from 'express';\nimport type Stripe from 'stripe';\n\nconst { stripeENV } = config;\n\n//? check signature of stripe token\nconst stripeHost =\n  (handle: handler, stripe: Stripe) =>\n  async (req: RequestWithWebhook, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const sig = req.headers['stripe-signature'];\n\n      const event: Stripe.Event = stripe.webhooks.constructEvent(req.body, sig, stripeENV.WEBHOOK);\n      req.event = event;\n\n      await handle(req, res, next);\n    } catch (err) {\n      logger.error(err.message);\n      next(err);\n    }\n  };\n\nexport default stripeHost;\n"],"names":["stripeENV","config","stripeHost","handle","stripe","req","res","next","sig","headers","event","webhooks","constructEvent","body","WEBHOOK","err","logger","error","message"],"mappings":";;;;+BAyBA;;;eAAA;;;+DAzBmB;wBAEI;;;;;;AAIvB,MAAM,EAAEA,SAAS,EAAE,GAAGC,eAAM;AAE5B,mCAAmC;AACnC,MAAMC,aACJ,CAACC,QAAiBC,SAClB,OAAOC,KAAyBC,KAAeC;QAC7C,IAAI;YACF,MAAMC,MAAMH,IAAII,OAAO,CAAC,mBAAmB;YAE3C,MAAMC,QAAsBN,OAAOO,QAAQ,CAACC,cAAc,CAACP,IAAIQ,IAAI,EAAEL,KAAKR,UAAUc,OAAO;YAC3FT,IAAIK,KAAK,GAAGA;YAEZ,MAAMP,OAAOE,KAAKC,KAAKC;QACzB,EAAE,OAAOQ,KAAK;YACZC,cAAM,CAACC,KAAK,CAACF,IAAIG,OAAO;YACxBX,KAAKQ;QACP;IACF;MAEF,WAAeb"}