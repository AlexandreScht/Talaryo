{"version":3,"sources":["../../src/libs/OAuthToken.ts"],"sourcesContent":["import config from '@config';\nimport type { OAuthToken } from '@interfaces/auth';\nimport { OAuth2Client } from 'google-auth-library';\nconst {\n  security: { O2auth },\n} = config;\n\nconst OAuthTokenCheck = async (idToken: string, at_hash: string): Promise<OAuthToken> => {\n  const CLIENT_ID = O2auth.clientID;\n  const client = new OAuth2Client(CLIENT_ID);\n\n  try {\n    const ticket = await client.verifyIdToken({\n      idToken,\n      audience: CLIENT_ID,\n    });\n\n    const user = ticket.getPayload();\n\n    if (at_hash === user.at_hash) {\n      return [false, user];\n    }\n    return [true];\n  } catch (error) {\n    return [true];\n  }\n};\n\nexport default OAuthTokenCheck;\n"],"names":["security","O2auth","config","OAuthTokenCheck","idToken","at_hash","CLIENT_ID","clientID","client","OAuth2Client","ticket","verifyIdToken","audience","user","getPayload","error"],"mappings":";;;;+BA4BA;;;eAAA;;;+DA5BmB;mCAEU;;;;;;AAC7B,MAAM,EACJA,UAAU,EAAEC,MAAM,EAAE,EACrB,GAAGC,eAAM;AAEV,MAAMC,kBAAkB,OAAOC,SAAiBC;IAC9C,MAAMC,YAAYL,OAAOM,QAAQ;IACjC,MAAMC,SAAS,IAAIC,+BAAY,CAACH;IAEhC,IAAI;QACF,MAAMI,SAAS,MAAMF,OAAOG,aAAa,CAAC;YACxCP;YACAQ,UAAUN;QACZ;QAEA,MAAMO,OAAOH,OAAOI,UAAU;QAE9B,IAAIT,YAAYQ,KAAKR,OAAO,EAAE;YAC5B,OAAO;gBAAC;gBAAOQ;aAAK;QACtB;QACA,OAAO;YAAC;SAAK;IACf,EAAE,OAAOE,OAAO;QACd,OAAO;YAAC;SAAK;IACf;AACF;MAEA,WAAeZ"}