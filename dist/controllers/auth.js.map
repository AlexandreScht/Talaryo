{"version":3,"sources":["../../src/controllers/auth.ts"],"sourcesContent":["import { InvalidArgumentError, InvalidSessionError, NotFoundError } from '@exceptions';\nimport OAuthTokenCheck from '@libs/OAuthToken';\nimport { createCookie, createToken } from '@libs/setToken';\nimport { emailValidator, passwordValidator, stringValidator } from '@libs/validate';\nimport isHumain from '@middlewares/isHumain';\nimport mw from '@middlewares/mw';\nimport slowDown from '@middlewares/slowDown';\nimport validator from '@middlewares/validator';\nimport MailerServiceFile from '@services/mailer';\nimport UsersServiceFile from '@services/users';\nimport { transaction } from 'objection';\nimport { Container } from 'typedi';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst AuthController = ({ app }) => {\n  const UserServices = Container.get(UsersServiceFile);\n  const MailerService = Container.get(MailerServiceFile);\n  app.post(\n    '/register',\n    mw([\n      validator({\n        body: {\n          email: emailValidator.required(),\n          password: passwordValidator.required(),\n          firstName: stringValidator.required(),\n          lastName: stringValidator.required(),\n          token: stringValidator.required(),\n        },\n      }),\n      isHumain(),\n      async ({\n        locals: {\n          body: { email, password, firstName, lastName },\n        },\n        res,\n        next,\n      }) => {\n        try {\n          const [err] = await UserServices.findUserByEmail(email);\n\n          if (!err) {\n            throw new InvalidArgumentError(`this email is already used`);\n          }\n\n          await transaction(UserServices.getModel, async trx => {\n            const user = await UserServices.register({ email, password, firstName, lastName }, trx);\n            await MailerService.Confirmation(user.email, firstName, user.accessToken);\n            await trx.commit();\n          });\n\n          res.status(201).send({ result: 'Confirmation email has been sent' });\n        } catch (error) {\n          next(error);\n        }\n      },\n    ]),\n  );\n  app.post(\n    '/login',\n    mw([\n      slowDown(500),\n      validator({\n        body: {\n          email: emailValidator.required(),\n          password: stringValidator.required(),\n          token: stringValidator.required(),\n        },\n      }),\n      isHumain(),\n      async ({\n        locals: {\n          body: { email, password },\n        },\n        res,\n        next,\n      }) => {\n        try {\n          const [err, user] = await UserServices.findUserByEmail(email);\n\n          if (err) {\n            throw new NotFoundError(`Email or Password is incorrect`);\n          }\n\n          if (!user.validate) {\n            throw new InvalidSessionError('Please validate your account by mail');\n          }\n\n          await UserServices.login(user, password);\n\n          const tokenData = await createToken(user);\n          const refreshToken = uuidv4();\n          const cookie = createCookie(user, refreshToken);\n\n          await UserServices.setRefreshToken(user, refreshToken);\n\n          res.setHeader('Set-Cookie', cookie);\n\n          res.status(200).send({ payload: tokenData });\n        } catch (error) {\n          next(error);\n        }\n      },\n    ]),\n  );\n  app.post(\n    '/OAuth',\n    mw([\n      validator({\n        body: {\n          id_token: stringValidator.required(),\n          at_hash: stringValidator.required(),\n          name: stringValidator,\n        },\n      }),\n      async ({\n        locals: {\n          body: { at_hash, id_token },\n        },\n        res,\n        next,\n      }) => {\n        try {\n          const [error, OAuthUser] = await OAuthTokenCheck(id_token, at_hash);\n          console.log(OAuthUser);\n\n          if (error) {\n            throw new InvalidSessionError();\n          }\n\n          const [userNotFound, user] = await UserServices.findUserOAuth(OAuthUser.email);\n\n          const currentUser = userNotFound\n            ? await UserServices.register({ email: OAuthUser.email, firstName: OAuthUser?.given_name, lastName: OAuthUser?.family_name })\n            : user;\n\n          const refreshToken = uuidv4();\n          const tokenData = await createToken(currentUser);\n          const cookie = createCookie(currentUser, refreshToken);\n\n          await UserServices.setRefreshToken(currentUser, refreshToken);\n\n          res.setHeader('Set-Cookie', cookie);\n\n          res.status(201).send({ payload: tokenData });\n        } catch (error) {\n          next(error);\n        }\n      },\n    ]),\n  );\n};\n\nexport default AuthController;\n"],"names":["AuthController","app","UserServices","Container","get","UsersServiceFile","MailerService","MailerServiceFile","post","mw","validator","body","email","emailValidator","required","password","passwordValidator","firstName","stringValidator","lastName","token","isHumain","locals","res","next","err","findUserByEmail","InvalidArgumentError","transaction","getModel","trx","user","register","Confirmation","accessToken","commit","status","send","result","error","slowDown","NotFoundError","validate","InvalidSessionError","login","tokenData","createToken","refreshToken","uuidv4","cookie","createCookie","setRefreshToken","setHeader","payload","id_token","at_hash","name","OAuthUser","OAuthTokenCheck","console","log","userNotFound","findUserOAuth","currentUser","given_name","family_name"],"mappings":"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"}