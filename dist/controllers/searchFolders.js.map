{"version":3,"sources":["../../src/controllers/searchFolders.ts"],"sourcesContent":["// import { idValidator, limitValidator, pageValidator, stringValidator } from '@/libs/validate';\n// import auth from '@/middlewares/auth';\n// import validator from '@/middlewares/validator';\n// import FavorisFolderFile from '@/services/favFolders';\n// import mw from '@middlewares/mw';\n// import Container from 'typedi';\n\n// const FoldersController = ({ app }) => {\n//   const FavorisFolderServices = Container.get(FavorisFolderFile);\n//   app.post(\n//     '/create-searchFolders',\n//     mw([\n//       auth(),\n//       validator({\n//         body: { name: stringValidator.required() },\n//       }),\n//       async ({\n//         locals: {\n//           body: { name },\n//         },\n//         session: { sessionId },\n//         res,\n//         next,\n//       }) => {\n//         try {\n//           const success = await FavorisFolderServices.createFolder(name, sessionId);\n\n//           res.send({ res: success });\n//         } catch (error) {\n//           next(error);\n//         }\n//       },\n//     ]),\n//   );\n//   app.delete(\n//     '/remove-searchFolders',\n//     mw([\n//       validator({\n//         query: {\n//           id: idValidator.required(),\n//         },\n//       }),\n//       async ({\n//         locals: {\n//           query: { id },\n//         },\n//         res,\n//         next,\n//       }) => {\n//         try {\n//           const countDeleted = await FavorisFolderServices.removeFavFolder(id);\n//           res.send({ res: countDeleted });\n//         } catch (error) {\n//           next(error);\n//         }\n//       },\n//     ]),\n//   );\n//   app.get(\n//     '/get-searchFolders',\n//     mw([\n//       auth(),\n//       validator({\n//         query: {\n//           limit: limitValidator.default(10),\n//           page: pageValidator.default(1),\n//           name: stringValidator,\n//         },\n//       }),\n//       async ({\n//         locals: {\n//           query: { name, page, limit },\n//         },\n//         session: { sessionId },\n//         res,\n//         next,\n//       }) => {\n//         try {\n//           const { folders, total } = await FavorisFolderServices.getFavInFolders(sessionId, { limit, page, name });\n//           res.send({ res: { folders, meta: { total } } });\n//         } catch (error) {\n//           next(error);\n//         }\n//       },\n//     ]),\n//   );\n// };\n// export default FoldersController;\n"],"names":[],"mappings":"AAAA,iGAAiG;AACjG,yCAAyC;AACzC,mDAAmD;AACnD,yDAAyD;AACzD,oCAAoC;AACpC,kCAAkC;AAElC,2CAA2C;AAC3C,oEAAoE;AACpE,cAAc;AACd,+BAA+B;AAC/B,WAAW;AACX,gBAAgB;AAChB,oBAAoB;AACpB,sDAAsD;AACtD,YAAY;AACZ,iBAAiB;AACjB,oBAAoB;AACpB,4BAA4B;AAC5B,aAAa;AACb,kCAAkC;AAClC,eAAe;AACf,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,uFAAuF;AAEvF,wCAAwC;AACxC,4BAA4B;AAC5B,yBAAyB;AACzB,YAAY;AACZ,WAAW;AACX,UAAU;AACV,OAAO;AACP,gBAAgB;AAChB,+BAA+B;AAC/B,WAAW;AACX,oBAAoB;AACpB,mBAAmB;AACnB,wCAAwC;AACxC,aAAa;AACb,YAAY;AACZ,iBAAiB;AACjB,oBAAoB;AACpB,2BAA2B;AAC3B,aAAa;AACb,eAAe;AACf,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,kFAAkF;AAClF,6CAA6C;AAC7C,4BAA4B;AAC5B,yBAAyB;AACzB,YAAY;AACZ,WAAW;AACX,UAAU;AACV,OAAO;AACP,aAAa;AACb,4BAA4B;AAC5B,WAAW;AACX,gBAAgB;AAChB,oBAAoB;AACpB,mBAAmB;AACnB,+CAA+C;AAC/C,4CAA4C;AAC5C,mCAAmC;AACnC,aAAa;AACb,YAAY;AACZ,iBAAiB;AACjB,oBAAoB;AACpB,0CAA0C;AAC1C,aAAa;AACb,kCAAkC;AAClC,eAAe;AACf,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,sHAAsH;AACtH,6DAA6D;AAC7D,4BAA4B;AAC5B,yBAAyB;AACzB,YAAY;AACZ,WAAW;AACX,UAAU;AACV,OAAO;AACP,KAAK;AACL,oCAAoC"}