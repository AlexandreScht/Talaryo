{"version":3,"sources":["../../src/test/auth.test.ts"],"sourcesContent":["import { App } from '@/app';\nimport { AuthRegister } from '@interfaces/auth';\nimport { ApiRouter } from '@routes/prepareRoutes';\nimport request from 'supertest';\n\nafterAll(async () => {\n  await new Promise<void>(resolve => setTimeout(() => resolve(), 500));\n});\n\ndescribe('Testing Auth', () => {\n  describe('[POST] /register', () => {\n    it('response should have true', () => {\n      const userData: AuthRegister = {\n        email: 'test@gmail.com',\n        password: 'Default08!',\n        token: 'disabledToken',\n      };\n      const app = new App(new ApiRouter());\n      return request(app.getServer()).post('/api/register').send(userData).expect(201);\n    });\n  });\n\n  describe('[POST] /login', () => {\n    it('response should have true', () => {\n      const userData: AuthRegister = {\n        email: 'test@gmail.com',\n        password: 'Default08!',\n        token: 'disabledToken',\n      };\n      const app = new App(new ApiRouter());\n      return request(app.getServer()).post('/api/login').send(userData).expect(200);\n    });\n  });\n});\n"],"names":["afterAll","Promise","resolve","setTimeout","describe","it","userData","email","password","token","app","App","ApiRouter","request","getServer","post","send","expect"],"mappings":";;;;qBAAoB;+BAEM;kEACN;;;;;;AAEpBA,SAAS;IACP,MAAM,IAAIC,QAAcC,CAAAA,UAAWC,WAAW,IAAMD,WAAW;AACjE;AAEAE,SAAS,gBAAgB;IACvBA,SAAS,oBAAoB;QAC3BC,GAAG,6BAA6B;YAC9B,MAAMC,WAAyB;gBAC7BC,OAAO;gBACPC,UAAU;gBACVC,OAAO;YACT;YACA,MAAMC,MAAM,IAAIC,QAAG,CAAC,IAAIC,wBAAS;YACjC,OAAOC,IAAAA,kBAAO,EAACH,IAAII,SAAS,IAAIC,IAAI,CAAC,iBAAiBC,IAAI,CAACV,UAAUW,MAAM,CAAC;QAC9E;IACF;IAEAb,SAAS,iBAAiB;QACxBC,GAAG,6BAA6B;YAC9B,MAAMC,WAAyB;gBAC7BC,OAAO;gBACPC,UAAU;gBACVC,OAAO;YACT;YACA,MAAMC,MAAM,IAAIC,QAAG,CAAC,IAAIC,wBAAS;YACjC,OAAOC,IAAAA,kBAAO,EAACH,IAAII,SAAS,IAAIC,IAAI,CAAC,cAAcC,IAAI,CAACV,UAAUW,MAAM,CAAC;QAC3E;IACF;AACF"}