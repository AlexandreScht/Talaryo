{"version":3,"sources":["../../src/utils/puppeteer.ts"],"sourcesContent":["import { cheerioResult, puppeteerProps, scrappingResult } from '@/interfaces/scrapping';\nimport config from '@config';\nimport { InvalidArgumentError, ServerException } from '@exceptions';\nimport { logger } from '@utils/logger';\nimport { load } from 'cheerio';\nimport type { Page } from 'puppeteer';\nimport { executablePath } from 'puppeteer';\nimport { Cluster } from 'puppeteer-cluster';\nimport puppeteer from 'puppeteer-extra';\nimport StealthPlugin from 'puppeteer-extra-plugin-stealth';\nconst { proxy } = config;\n\nexport class ApiPuppeteer {\n  private proxyServer: string = proxy.SERVER;\n  private proxyUsername: string = proxy.USERNAME;\n  private proxyPassword: string = proxy.PASSWORD;\n  private browser: Cluster | null = null;\n\n  protected check(data: puppeteerProps[]) {\n    data.map(v => {\n      if (!v.url || typeof v.url !== 'string') {\n        throw new InvalidArgumentError('url is a required property and must be a string.');\n      }\n\n      if (!v.props || !Array.isArray(v.props)) {\n        throw new InvalidArgumentError('Option \"props\" needs to be an array.');\n      }\n      if (v.current && typeof v.url !== 'boolean') {\n        throw new InvalidArgumentError('Option \"currentCompany\" needs to be a boolean.');\n      }\n    });\n\n    logger.info(`---------------\n    puppeteer check successfully\n    ---------------`);\n  }\n\n  private getNumber(values: string): number | undefined {\n    const $ = load(values);\n    const nResults = $('#result-stats').text();\n    const match = nResults.match(/(\\d+(?:[.,]\\d{3})*(?:\\s+\\d{3})*)\\s*r√©sultats/);\n\n    if (match) {\n      return Number.parseInt(match[1].replace(/\\s/g, ''), 10);\n    }\n    return undefined;\n  }\n\n  private async init(): Promise<void> {\n    try {\n      puppeteer.use(StealthPlugin());\n      this.browser = await Cluster.launch({\n        concurrency: Cluster.CONCURRENCY_PAGE,\n        maxConcurrency: 10,\n        puppeteerOptions: {\n          headless: 'new',\n          executablePath: executablePath(),\n          args: [\n            `--proxy-server=${this.proxyServer}`,\n            '--no-sandbox',\n            '--disable-setuid-sandbox',\n            '--disable-dev-shm-usage',\n            '--disable-accelerated-2d-canvas',\n            '--disable-gpu',\n            '--disable-features=site-per-process',\n            '--enable-features=NetworkService',\n            '--allow-running-insecure-content',\n            '--enable-automation',\n            '--disable-background-timer-throttling',\n            '--disable-backgrounding-occluded-windows',\n            '--disable-renderer-backgrounding',\n            '--disable-web-security',\n            '--disable-infobars',\n            '--ignore-certifcate-errors-spki-list',\n            '--ignore-certifcate-errors',\n            '--disable-background-networking',\n            '--disable-breakpad',\n            '--disable-client-side-phishing-detection',\n            '--disable-component-update',\n            '--disable-default-apps',\n            '--disable-domain-reliability',\n            '--disable-extensions',\n            '--disable-hang-monitor',\n            '--disable-ipc-flooding-protection',\n            '--disable-print-preview',\n            '--disable-prompt-on-repost',\n            '--disable-speech-api',\n            '--disk-cache-size=33554432',\n            '--hide-scrollbars',\n            '--ignore-gpu-blacklist',\n            '--metrics-recording-only',\n            '--mute-audio',\n            '--no-default-browser-check',\n            '--no-first-run',\n            '--no-pings',\n            '--no-zygote',\n            '--use-gl=swiftshader',\n            '--use-mock-keychain',\n          ],\n          ignoreHTTPSErrors: true,\n        },\n      });\n      logger.info(`Puppeteer launched!`);\n    } catch (error) {\n      // Kill Puppeteer\n      logger.error('puppeteer browser error: ' + error);\n      await this.close();\n      throw new ServerException();\n    }\n  }\n\n  private async scrapper({\n    page,\n    data: { props, url },\n  }: {\n    page: Page;\n    data: puppeteerProps;\n  }): Promise<[boolean, [cheerioResult, number | undefined]?]> {\n    return new Promise(async resolve => {\n      try {\n        const session = await page.target().createCDPSession();\n        await page.setBypassCSP(true);\n        await session.send('Page.enable');\n        await session.send('Page.setWebLifecycleState', {\n          state: 'active',\n        });\n\n        await page.setUserAgent(\n          'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36 OPR/103.0.0.0',\n        );\n\n        await page.setRequestInterception(true);\n\n        page.on('request', request => {\n          const resourceTypesAccepted = ['document'];\n          if (resourceTypesAccepted.includes(request.resourceType())) {\n            request.continue();\n          } else {\n            request.abort();\n          }\n        });\n\n        await page.authenticate({\n          username: this.proxyUsername,\n          password: this.proxyPassword,\n        });\n\n        page.on('response', async response => {\n          if (response.status() === 302) {\n            resolve([true]);\n          }\n\n          if (response.url().startsWith(props[1]) && response.status() === 200) {\n            const responseBody = await response.text();\n            if (!responseBody) {\n              await page.close();\n              resolve([true]);\n            }\n            const res: cheerioResult = props[0](responseBody);\n            await page.close();\n            resolve([false, [res, this.getNumber(responseBody)]]);\n          }\n        });\n\n        await page.goto(url);\n      } catch (err) {\n        // Kill Puppeteer\n        await this.close();\n        resolve([err]);\n      }\n    });\n  }\n\n  protected async open(values: puppeteerProps[]): Promise<[boolean, scrappingResult[]?]> {\n    try {\n      if (!this.browser) {\n        await this.init();\n      }\n\n      this.browser.task(async ({ page, data }: { page: Page; data: puppeteerProps }) => {\n        logger.info(`scrapping: ${data.url}`);\n        const [error, res] = await this.scrapper({ page, data });\n        if (error) {\n          data.retryCount++;\n          if (data.retryCount < 3) {\n            logger.error(`Error on scrapping: ${data.url}`);\n            this.browser.queue(data);\n          } else {\n            result.push({ data: undefined, current: true });\n          }\n        } else {\n          result.push({ data: res[0], number: res[1], current: data.current });\n        }\n      });\n\n      const result: scrappingResult[] = [];\n      logger.info(`Puppeteer scrapping!`);\n      values.forEach(option => {\n        this.browser.queue(option);\n      });\n      await this.close();\n      return [false, result];\n    } catch (error) {\n      logger.error(`Error on open: ${error}`);\n      await this.close();\n      return [true];\n    }\n  }\n\n  protected close(): Promise<void> {\n    return new Promise(async (resolve, reject) => {\n      if (this.browser) {\n        try {\n          await this.browser.idle();\n          await this.browser.close();\n          this.browser = null;\n          logger.info('Closed browser !');\n        } catch (err) {\n          logger.error(`error on Closed browser: ${err}`);\n          reject(err);\n        }\n      }\n\n      return resolve();\n    });\n  }\n}\n"],"names":["ApiPuppeteer","proxy","config","check","data","map","v","url","InvalidArgumentError","props","Array","isArray","current","logger","info","getNumber","values","$","load","nResults","text","match","Number","parseInt","replace","undefined","init","puppeteer","use","StealthPlugin","browser","Cluster","launch","concurrency","CONCURRENCY_PAGE","maxConcurrency","puppeteerOptions","headless","executablePath","args","proxyServer","ignoreHTTPSErrors","error","close","ServerException","scrapper","page","Promise","resolve","session","target","createCDPSession","setBypassCSP","send","state","setUserAgent","setRequestInterception","on","request","resourceTypesAccepted","includes","resourceType","continue","abort","authenticate","username","proxyUsername","password","proxyPassword","response","status","startsWith","responseBody","res","goto","err","open","task","retryCount","queue","result","push","number","forEach","option","reject","idle","SERVER","USERNAME","PASSWORD"],"mappings":"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"}