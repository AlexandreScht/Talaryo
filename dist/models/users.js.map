{"version":3,"sources":["../../src/models/users.ts"],"sourcesContent":["import { User, role } from '@interfaces/models';\nimport { compare } from 'bcrypt';\nimport { Model, ModelObject, QueryBuilder } from 'objection';\n\nexport class UserModel extends Model implements User {\n  id: number;\n  email: string;\n  role: role;\n  password?: string;\n  firstName?: string;\n  lastName?: string;\n  validate: boolean;\n  accessToken?: string;\n  refreshToken?: string;\n  stripeCustomer?: string;\n  freeTrials?: Date;\n  stripeBilling?: Date;\n  freeTest: boolean;\n  passwordReset?: boolean;\n  count?: string;\n\n  static tableName = 'users';\n  static idColumn = 'id';\n\n  static modifiers = {\n    paginate: (query: QueryBuilder<UserModel, UserModel[]>, limit: number, page: number) => query.limit(limit).offset((page - 1) * limit),\n  };\n\n  checkPassword = async (password: string): Promise<boolean> => {\n    return await compare(password, this.password);\n  };\n}\n\nexport type UserShape = ModelObject<UserModel>;\n"],"names":["UserModel","Model","id","email","role","password","firstName","lastName","validate","accessToken","refreshToken","stripeCustomer","freeTrials","stripeBilling","freeTest","passwordReset","count","checkPassword","compare","tableName","idColumn","modifiers","paginate","query","limit","page","offset"],"mappings":";;;;+BAIaA;;;eAAAA;;;wBAHW;2BACyB;;;;;;;;;;;;;;AAE1C,IAAA,AAAMA,YAAN,MAAMA,kBAAkBC,gBAAK;;;QAClCC,uBAAAA,MAAAA,KAAAA;QACAC,uBAAAA,SAAAA,KAAAA;QACAC,uBAAAA,QAAAA,KAAAA;QACAC,uBAAAA,YAAAA,KAAAA;QACAC,uBAAAA,aAAAA,KAAAA;QACAC,uBAAAA,YAAAA,KAAAA;QACAC,uBAAAA,YAAAA,KAAAA;QACAC,uBAAAA,eAAAA,KAAAA;QACAC,uBAAAA,gBAAAA,KAAAA;QACAC,uBAAAA,kBAAAA,KAAAA;QACAC,uBAAAA,cAAAA,KAAAA;QACAC,uBAAAA,iBAAAA,KAAAA;QACAC,uBAAAA,YAAAA,KAAAA;QACAC,uBAAAA,iBAAAA,KAAAA;QACAC,uBAAAA,SAAAA,KAAAA;QASAC,uBAAAA,iBAAgB,OAAOZ;YACrB,OAAO,MAAMa,IAAAA,eAAO,EAACb,UAAU,IAAI,CAACA,QAAQ;QAC9C;;AACF;AAVE,iBAjBWL,WAiBJmB,aAAY;AACnB,iBAlBWnB,WAkBJoB,YAAW;AAElB,iBApBWpB,WAoBJqB,aAAY;IACjBC,UAAU,CAACC,OAA6CC,OAAeC,OAAiBF,MAAMC,KAAK,CAACA,OAAOE,MAAM,CAAC,AAACD,CAAAA,OAAO,CAAA,IAAKD;AACjI"}